[{"id":0,"url":"/doc/ros2/","title":"ROS2 Overview","content":"\nROS 2¶\n\nOverview¶\n\n\nInstallation\nRoadmap\nROS 2 Distributions\nROS 2 Concepts\nFeatures Status\nTutorials\nTroubleshooting\nContributing to ROS 2\nROS 2 Project Governance\nRelated Projects\nContact us\nAbout this documentation\n\n\nThe Robot Operating System (ROS) is a set of software libraries and tools that help you build robot applications.\nFrom drivers to state-of-the-art algorithms, and with powerful developer tools, ROS has what you need for your next robotics project.\nAnd it’s all open source.\nHere you will find documentation on how to install and use software from ROS 2, which is a new version of ROS that is under heavy development.\nSee below for more information on ROS 2.\nIf you’re looking for information on ROS 1 (i.e., ROS as it has existed for several years and what you might be using right now), check the ROS website or the documentation wiki.\nBefore you proceed here, please read the features page to get an idea of what is in the current ROS 2 release.\n\n\nReleases¶\nSee the releases page.\n\n\nInstallation¶\nSee the installation page.\n\n\nTutorials and Features¶\nROS 2 is under heavy development.\nYou can check out the tutorials page to see a range of examples of what the system can do in its current state, if it fits your project today depending on the exact requirement.\nFor details of the current features, see features status page.\nIf migrating code from ROS to ROS 2, check the migration guide.\n\n\nWhat’s ahead¶\nROS 2 is currently planning to release new versions every six month (which is twice as often as ROS 1) to give the community members an opportunity to provide early feedback on the evolving system.\nSee the Roadmap for details on the planned upcoming features for ROS 2.\n\n\nContributing¶\nSee the contributing page and the developer guide for details on how to contribute to ROS 2 developments.\n\n\nGovernance¶\nSee the governance page.\n\n\nReporting problems and asking questions¶\nSee the contact page.\n\n\n\nAbout ROS 2¶\nSince ROS was started in 2007, a lot has changed in the robotics and ROS community.\nThe goal of the ROS 2 project is to adapt to these changes, leveraging what is great about ROS 1 and improving what isn’t.\nThere’s a full article on the motivation of ROS 2 here.\n\nWhere to find more information¶\nThere are various articles on the design of ROS 2 at design.ros2.org, such as: *Why ROS 2?*, *ROS on DDS*, and *Changes between ROS 1 and ROS 2*.\nThe code for ROS 2 is open source and broken into various repositories.\nYou can find the code for most of the repositories on the ros2 github organization.\ndocs.ros2.org contains current details about ROS 2 internal design and organization.\nawesome-ros2 is a “cheat sheet” style quick reference for ROS 2 packages and resources which will get (hopefully) listed on the curated list of awesome lists to help GitHub users to get to know ROS 2.\nThe following ROSCon talks have been given on ROS 2 and provide information about the workings of ROS 2 and various demos:\n\n\n\n\n\n\n\nTitle\nType\nLinks\n\n\n\nHands-on ROS 2: A Walkthrough\nROSCon 2018 presentation\nslides / video\n\nLaunch for ROS 2\nROSCon 2018 presentation\nslides / video\n\nThe ROS 2 vision for advancing the future of robotics development\nROSCon 2017 presentation\nslides / video\n\nROS 2 Update - summary of alpha releases, architectural overview\nROSCon 2016 presentation\nslides / video\n\nEvaluating the resilience of ROS2 communication layer\nROSCon 2016 presentation\nslides / video\n\nState of ROS 2 - demos and the technology behind\nROSCon 2015 presentation\nslides / video\n\nROS 2 on “small” embedded systems\nROSCon 2015 presentation\nslides / video\n\nReal-time control in ROS and ROS 2\nROSCon 2015 presentation\nslides / video\n\nWhy you want to use ROS 2\nROSCon 2014 presentation\nslides / video\n\nNext-generation ROS: Building on DDS\nROSCon 2014 presentation\nslides / video\n\n\n\n\n\n"},{"id":1,"url":"/doc/ros2/About/","title":"About this documentation","content":"\nAbout this documentation¶\nThis documentation lives in http://github.com/ros2/ros2_documentation. Purely written in ReST markup format, it is processed using Sphinx during ROSIndex builds. Intersphinx support is readily available for cross-linking package specific entities.\nUpdates submission is currently handled through pull requests.\n\n"},{"id":2,"url":"/doc/ros2/Concepts/","title":"ROS 2 Concepts","content":"\nROS 2 Concepts¶\n\n\nOverview of ROS 2 Concepts\nROS 2 and different DDS/RTPS vendors\nAbout Quality of Service Settings\nAbout ROS 2 Interfaces\nAbout ROS2 client libraries\nLogging and logger configuration\n\n\nSee also http://docs.ros2.org/ for ROS 2 high level documentation.\n\n"},{"id":3,"url":"/doc/ros2/Contributing/","title":"Contributing to ROS 2","content":"\nContributing to ROS 2¶\n\nTable of Contents\n\nTenets\nDesign discussions\nSupport\nContributing code\n\n\nA few things to remember before you start contributing to the ROS 2 project.\n\nTenets¶\n\nRespect what came before\nROS has been around for more than a decade and is used by developers and across the world.\nKeep a humble attitude and an open mindset while contributing.\n\nEmbed OSRF as early as possible\n\nOSRF acts as a gate-keeper and advocate for the ROS community.\nRely on their expertise and technical judgement from the design phase.\nStart discussions with OSRF and the community early.\nLong time ROS contributors may have a clearer vision of the bigger picture.\nIf you implement a feature and send a pull request without discussing with the community first, you are taking the risk of it being rejected, or you may be asked to largely rethink your design.\nOpening issues or using Discourse to socialize an idea before starting the implementation is generally preferable.\n\n\nAdopt community best-practices whenever possible instead of ad-hoc processes\nThink about your end-user’s experience when developing and contributing.\nAvoid using non-standard tools or libraries that may not be accessible to everyone.\n\nThink about the community as a whole\nThink about the bigger picture.\nThere are developers building different robots with different constraints.\nROS needs to accommodate requirements of the whole community.\n\n\nThere are a number of ways you can contribute to the ROS 2 project.\n\n\nDesign discussions¶\nDiscussions about the design of ROS 2 are ongoing on the ROS 2 forum.\nParticipating in these discussions is an important way to have a say on how different features of ROS 2 will work and will be implemented.\nThe diverse community behind the ROS ecosystem is one of its greatest assets.\nWe encourage all members of the ROS community to participate in these design discussions so that we can 1) leverage the experience of community members, and 2) keep the varied use cases of ROS in mind.\n\n\nSupport¶\nOne of the easiest ways that you can contribute to ROS 2 is by helping other community members troubleshoot their system.\nROS 2 users come from a range of technical backgrounds, use a variety of different operating systems/platforms, and don’t necessarily have any prior experience with ROS (1 or 2).\nIf you see an issue on ROS Answers that is similar to something you’ve run into yourself, please consider providing some pointers to what helped in your situation.\n+Don’t worry if you are not sure if your response is correct - simply say so, and other community members will jump in if necessary.\n\n\nContributing code¶\n\nSetting up your development environment¶\nTo get started, you’ll want to install from source; follow the source installation instructions for your platform.\n\n\nDevelopment Guides¶\n\n\nROS 2 On-boarding Guide\nROS 2 Developer Guide\nDesign Guide: Common patterns in ROS 2\nQuality Guide: Ensuring code quality\nMISRA Compliance Guide\nBuild Cop and Build Farmer Guide\nMigration guide from ROS 1\nExamples and tools for ROS1-to-ROS2 Migration\nUsing Sphinx for cross-referencing packages\n\n\n\n\nWhat to work on¶\nWe have identified a number of tasks that could be worked on by community members: they can be listed by searching across the ROS 2 repositories for issues labeled as “help wanted” or filtering the items on the ROS 2 waffle.io board.\nIf you see something on that list that you would like to work on, please comment on the item to let others know that you are looking into it.\nWe also have a label for issues that we think should be more accessible for first-time contributors, labelled “good first issue”.\nIf you are interested in contributing to the ROS 2 project, we encourage you to take a look at those issues first.\nIf you’d like to cast a wider net, we welcome contributions on any open issue (or others that you might propose), particularly tasks that have a milestone signifying they’re targeted for the next ROS 2 release (the milestone will be the next release’s codename e.g. ‘crystal’).\nIf you have some code to contribute that fixes a bug or improves documentation, please submit it as a pull request to the relevant repository.\nFor larger changes, it is a good idea to discuss the proposal on the ROS 2 forum before you start to work on it so that you can identify if someone else is already working on something similar.\nIf your proposal involves changes to the APIs, it is especially recommended that you discuss the approach before starting work.\n\n\nSubmitting your code changes¶\nCode contributions should be made via pull requests to the appropriate ros2 repositories.\nWe ask all contributors to follow the practices explained in the developer guide.\nPlease be sure to run tests for your code changes because most packages have tests that check that the code complies with our style guidelines.\n\n\n\n"},{"id":4,"url":"/doc/ros2/Contact/","title":"Contact us","content":"\nContact us¶\nIf you try out ROS 2 and have feedback or questions, please get in touch with us.\n\nGeneral/design discussion¶\nDiscussions about ROS 2 development and plans are happening on the “Next Generation ROS” Discourse category (previously on the sig-ng-ros (Special Interest Group on Next-Generation ROS) mailing list).\nJoin us there and participate in the conversation.\nIf you’d like to contact us privately (e.g., if your question contains information sensitive to your organization or project), you can email us directly at ros@osrfoundation.org.\n\n\nTroubleshooting¶\nIf you need help with troubleshooting your system, please first check ROS Answers to see if others have come across similar issues, otherwise ask a new questions on ROS Answers making sure to include at least the ros2 tag and the rosdistro version you are running, e.g. ardent.\n\n\nOpening issues¶\nIf you identify bugs, you can open an issue to notify the ROS team.\nBefore opening an issue, check if other users have reported similar issues by searching across the ros2 and ament Github organizations: example search query.\nIf it has not been reported, feel free to open an issue in the appropriate repository tracker.\nIf it’s not clear which tracker to use for a particular issue, file it in the ros2/ros2 repository and we’ll have a look at it.\nWhen filing an issue, please make sure to:\n\nInclude enough information for another person to understand the issue.\nInclude information about the exact platform, software, versions, and environment relevant to the problem. This includes how you installed the software (from binaries or from source) and which ROS middleware/DDS vendor you are using (if you know it).\nIn case of a bug consider providing a short, self contained, correct (compilable), example.\n\nPull requests are welcome for any of the ros2 repositories to suggest specific code changes!\nSee Contributing for more details on how to contribute.\n\n\n"}]